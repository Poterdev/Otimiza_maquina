# -*- coding: utf-8 -*-
"""Otimização.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rsdMa6_3uJ7NwhgVfT-ElQXOmFWqQFRm

<h1 style="font-size: 48px;">Analise de Dados (EDA) </h1>

### Analise exploratória de otimização de máquina

Neste notebook estarei organizando meus estudos e criando um roteiro para a analise de um conjunto de dados do kanggle.
Este é o link dos dados: https://www.kaggle.com/datasets/srinivasanusuri/optimization-of-machine-downtime?resource=download

"Optimization of machine downtime"

Primeiras impressões dos dados...
"""

df.columns

df.head(1)

"""## Entendimento das Variáveis do Conjunto de Dados de Otimização de Máquinas

Este conjunto de dados contém informações cruciais para o monitoramento e otimização de máquinas em uma linha de produção.
Abaixo estão descritas as variáveis incluídas no DataFrame e o que cada uma representa:

### 1. `Date`
- **Descrição**: Data de registro das medições.

### 2. `Machine_ID`
- **Descrição**: Identificador único da máquina. **Categórica**

### 3. `Assembly_Line_No`
- **Descrição**: Número da linha de produção associada à máquina. **Categórica**

### 4. `Hydraulic_Pressure(bar)`
- **Descrição**: Pressão hidráulica medida em bar. **Quantitativa contínua**

### 5. `Coolant_Pressure(bar)`
- **Descrição**: Pressão do sistema de refrigeração em bar. **Quantitativa contínua**

### 6. `Air_System_Pressure(bar)`
- **Descrição**: Pressão do sistema de ar comprimido em bar. **Quantitativa contínua**

### 7. `Coolant_Temperature`
- **Descrição**: Temperatura do fluido de arrefecimento, uma variável quantitativa contínua. **Quantitativa contínua**

### 8. `Hydraulic_Oil_Temperature(?C)`
- **Descrição**: Temperatura do óleo hidráulico em graus Celsius. **Quantitativa contínua**

### 9. `Spindle_Bearing_Temperature(?C)`
- **Descrição**: Temperatura dos rolamentos do fuso, medida em graus Celsius. **Quantitativa contínua**

### 10. `Spindle_Vibration(?m)`
- **Descrição**: Vibração do fuso, medida em micrômetros. **Quantitativa contínua**

### 11. `Tool_Vibration(?m)`
- **Descrição**: Vibração da ferramenta, medida em micrômetros. **Quantitativa contínua**

### 12. `Spindle_Speed(RPM)`
- **Descrição**: Velocidade do fuso em rotações por minuto (RPM). **Quantitativa discreta**

### 13. `Voltage(volts)`
- **Descrição**: Tensão elétrica aplicada ao sistema, medida em volts. **Quantitativa discreta**

### 14. `Torque(Nm)`
- **Descrição**: Torque gerado pela máquina, medido em Newton-metros (Nm). **Quantitativa Discreta**

### 15. `Cutting(kN)`
- **Descrição**: Força de corte aplicada, medida em quilonewtons (kN). **Quantitativa contínua**

### 16. `Downtime`
- **Descrição**: Variável booleana que indica se a máquina parou ou não (True/False). Fundamental para análise de tempo de inatividade (paradas) e para otimização dos processos de manutenção.

---

### Passos para o processamento de dados
- **Etapa:1** - Importar as bibiotecas nescessarias
- **Etapa:2** - Leitura do Dataset Dataset
- **Etapa:3** - 'Check Sanity' dos dados
- **Etapa:4** - Exploratory Data Analysis (EDA)
- **Etapa:5** - Concluções

<h1 style="font-size: 48px;">Etapa:1 - Importar as bibliotecas nescessariasa </h1>
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

#biblioteca para excluir os aviso dos graficos
import warnings
warnings.filterwarnings('ignore')

"""
<h1 style="font-size: 48px;">Etapa:2 - Leitura do Dataset </h1>"""

#Carregar o dataset
dados = "Machine Downtime.csv"

df = pd.read_csv(dados)

#head()
df.head()

#tail()
df.tail()

"""
<h1 style="font-size: 48px;">Etapa:3 - 'Check Sanity' dos dados </h1>"""

#shape()
df.shape

#info()
df.info()

#Encontrando arquivos nulos
df.isnull().sum()

#dados duplicados
df.duplicated().sum()

df.nunique()

df.describe().T

#encontra valores "garbage"
for i in df.select_dtypes(include="object").columns:
    print(df[i].value_counts())
    print("***"*10)

"""
<h1 style="font-size: 48px;">Etapa:4 - Exploratory Data Analysis (EDA) </h1>"""

#statisticas dos valores
df.describe().T

df.columns

plt.figure(figsize=(8,6))
sns.set_theme(style='whitegrid')
sns.countplot(data=df, x='Assembly_Line_No', hue='Downtime')
plt.xlabel('Linhas da empresa')
plt.ylabel('Frequência')
plt.title('Distribuição das linhas da empresa')
plt.savefig('Linhas das empresas.png')
plt.show()

plt.figure(figsize=(8,6))
sns.set_theme(style='whitegrid')
sns.countplot(data=df, x='Machine_ID', hue='Downtime')
plt.xlabel('Linhas da empresa')
plt.ylabel('Frequência')
plt.title('Maquinas')
plt.savefig('Frequencia de maquina.png')
plt.show()

df_copy = df.copy()
df_copy['Parada_int'] = df_copy['Downtime'].apply(lambda x: 0 if x == 'No_Machine_Failure' else 1)

c = df_copy.select_dtypes(include="number").corr(method='pearson')

#usando o heat map para uma melhor visualização
plt.figure(figsize=(25,25))
sns.heatmap(data=c, annot=True, cmap="viridis")
plt.savefig('Correlação.png')

"""# 2º Analise - correlação entre parametros

- 1.Identificamos uma relação quase moderada com 'Hydraulic_Pressure(bar)'
- 2.Uma correlação fraca com 'Cutting(kN)'
"""

df_copy.info()

#tamanho maior possivel
plt.figure(figsize=(25,20))
sns.pairplot(data=df_copy, hue='Downtime')
plt.savefig('Relações dos parametros.png')
plt.show()

"""# 3º Analise - Relação

Nesta analise coseguimos identificar varias informaçãoe que os dados conseguiram fornecer, e claro conseguimos identificar muitos parametros que podem evitar a caracterizar zonas seguras de configuraçao maquina.

Vamos explorar cada um deles para encontrar um esclarecimento melhor.
"""

df_copy.columns

"""# Separando as principais features"""

princ = ['Hydraulic_Pressure(bar)', 'Coolant_Pressure(bar)', 'Coolant_Temperature','Spindle_Speed(RPM)',
         'Cutting(kN)','Torque(Nm)', 'Tool_Vibration(?m)', 'Spindle_Vibration(?m)']

plt.figure(figsize=(25,20))
sns.pairplot(data=df_copy, hue='Downtime', vars=princ)
plt.savefig('Principais feature.png')
plt.show()

sns.set_theme(style='whitegrid')
for i in princ:
  fig, axes = plt.subplots(1, 2, figsize=(20, 8))
  fig.suptitle('Pressão Hidráulica', fontsize=16)
  # Boxplot
  sns.boxplot(data=df_copy, y= i, hue='Downtime', ax=axes[0])
  axes[0].set_title('Boxplot de Pressão Hidráulica')
  # Histplot
  sns.histplot(data=df_copy, x=i, hue='Downtime', kde=True, ax=axes[1])
  axes[1].set_title('i')
  plt.savefig('Pressão Hidráulica zonas seguras.png')
  plt.show()

"""<h1 style="font-size: 48px;">Etapa:5 - Concluções </h1>

1. **Pressão Hidráulica**
- Mostra padrões claros de diferença entre operação normal e falha
- Parâmetro mais controlável e com impacto direto nas falhas
- Possibilidade de estabelecer limites operacionais mais precisos

2. **Vibrações (Tool e Spindle)**
- Forte correlação entre si e com falhas
- Podem ser usadas como indicadores precoces de problemas
- Monitoramento conjunto pode prever falhas

3. **Temperatura do Spindle**
- Distribuições distintas entre operação normal e falha
- Bom indicador para manutenção preventiva
- Facilmente monitorável

4. **Força de Corte**
- Relação significativa com a pressão hidráulica
- Pode ser ajustada para otimizar o processo
- Impacto direto na vida útil da ferramenta
"""